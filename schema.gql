# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CreatePokemonDto {
  id: String!
  name: String!
  type: String!
  pokedex: Int!
}

type PostCommentEntity {
  id: String!
  userId: String!
  userName: String!
  comment: String!
  posts: CelestialPost
  postsId: String!
}

type PostLikeEntity {
  id: String!
  userId: String!
  userName: String!
  like: Boolean!
  posts: CelestialPost
}

type CelestialPost {
  id: String!
  userId: String!
  description: String!
  imageLink: String!
  slug: String
  users: UserEntity
  comments: [PostCommentEntity!]
  likes: [PostLikeEntity!]
}

type EventEntity {
  id: String!
  name: String!
  location: String!
  price: String!
  description: String!
  owner: String!
  contact: String!
  management_contact: String!
  manager: String!
  showDate: String!
  showTime: String!
  users: [UserEntity!]
}

type UserEntity {
  id: String!
  email: String!
  firstname: String!
  lastname: String!
  username: String!
  password: String!
  address: String!
  contact: Int!
  celestialPosts: [CelestialPost!]
  events: [EventEntity!]
}

type CreateUserDto {
  id: String!
  email: String!
  username: String!
  firstname: String!
  lastname: String!
  password: String!
  contact: Int!
  address: String!
}

type UserAuthModel {
  token: String!
  user: CreateUserDto!
}

type CelestialPostModel {
  id: String!
  userId: String!
  description: String!
  imageLink: String!
  slug: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CarasoulEntity {
  id: String!
  image: String!
  description: String!
  title: String!
  quote: String!
}

type UsersEventsEntity {
  id: String!
  eventId: String!
  userId: String!
}

type Query {
  pokemon: [CreatePokemonDto!]!
  getPokemon(id: String!): CreatePokemonDto!
  getUsers: [UserEntity!]!
  getUser(id: String!): UserEntity!
  getPosts: [CelestialPost!]!
  getPost(id: String!): CelestialPostModel!
  getComments: [PostLikeEntity!]!
  getComment(id: String!): PostLikeEntity!
  getCarasouls: [CarasoulEntity!]!
  carasoul(id: String!): CarasoulEntity!
  getEvent(id: String!): EventEntity!
  getEvents: [EventEntity!]!
}

type Mutation {
  updatePokemon(id: String!, updatePokemonInput: UpdatePokemonInput!): CreatePokemonDto!
  deletePokemon(id: String!): CreatePokemonDto!
  createPokemon(data: inputPokemon!): CreatePokemonDto!
  createUser(createUserInput: userInput!): CreateUserDto!
  updateUser(id: String!, updateUserInput: userInput!): UserEntity!
  deleteUser(id: String!): UserEntity!
  userSignIn(email: String!, password: String!): UserAuthModel!
  createPost(celestialPostData: CreateCelestialPostDto!): CelestialPostModel!
  deletePost(id: String!): CelestialPostModel!
  updatePost(id: String!, updateCelestialPost: CreateCelestialPostDto!): CelestialPostModel!
  createComment(createCommentInput: CreatePostCommentDto!): PostCommentEntity!
  updateComment(id: String!, updateCommentInput: UpdatePostCommentDto!): PostCommentEntity!
  deleteComment(id: String!): PostCommentEntity!
  createLike(createPostLikeInput: CreatePostLikeDto!): PostLikeEntity!
  updateLike(id: String!, updatePostLikeInput: UpdatePostLikeDto!): PostLikeEntity!
  deleteLike(id: String!): PostLikeEntity!
  createCarasoul(createCarasoulInput: CreateCarasoulDto!): CarasoulEntity!
  updateCarasoul(id: String!, updateCarasoulInput: UpdateCarasoulDto!): CarasoulEntity!
  deleteCarasoul(id: String!): CarasoulEntity!
  createEvent(createEventInput: CreateEventDto!): EventEntity!
  updateEvent(id: String!, updateEventInput: UpdateEventDto!): EventEntity!
  deleteEvent(id: String!): EventEntity!
  enterEvent(createEventInput: CreateEventDto!, users: [userEventInput!]!): EventEntity!
  createUserEvents(data: CreateUsersEventsDto!): UsersEventsEntity!
}

input UpdatePokemonInput {
  name: String!
  type: String!
  pokedex: Int!
}

input inputPokemon {
  name: String!
  type: String!
  pokedex: Int!
}

input userInput {
  email: String!
  username: String!
  firstname: String!
  lastname: String!
  password: String!
  contact: Int!
  address: String!
}

input CreateCelestialPostDto {
  userId: String!
  description: String!
  imageLink: String!
  slug: String!
}

input CreatePostCommentDto {
  userId: String!
  userName: String!
  comment: String!
  postsId: String!
}

input UpdatePostCommentDto {
  userId: String
  userName: String
  comment: String
  postsId: String
  id: String!
}

input CreatePostLikeDto {
  userId: String!
  userName: String!
  like: Boolean!
}

input UpdatePostLikeDto {
  userId: String
  userName: String
  like: Boolean
  id: String!
}

input CreateCarasoulDto {
  image: String!
  description: String!
  title: String!
  qoute: String!
}

input UpdateCarasoulDto {
  image: String
  description: String
  title: String
  qoute: String
  id: String!
}

input CreateEventDto {
  name: String!
  location: String!
  price: String!
  description: String!
  owner: String!
  contact: String!
  management_contact: String!
  manager: String!
  showDate: String!
  showTime: String!
}

input UpdateEventDto {
  name: String
  location: String
  price: String
  description: String
  owner: String
  contact: String
  management_contact: String
  manager: String
  showDate: String
  showTime: String
  id: String!
}

input userEventInput {
  id: String!
  email: String!
  username: String!
  firstname: String!
  lastname: String!
  password: String!
  contact: Int!
  address: String!
}

input CreateUsersEventsDto {
  eventId: String!
  userId: String!
}